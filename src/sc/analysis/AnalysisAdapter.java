/* This file was generated by SableCC (http://www.sablecc.org/). */

package sc.analysis;

import java.util.*;
import sc.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    @Override
    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    @Override
    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    @Override
    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    @Override
    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    @Override
    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAxiomeProgramme(AAxiomeProgramme node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAListeVar(AListeVar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVideListeVar(AVideListeVar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAListeVarPrime(AListeVarPrime node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVideListeVarPrime(AVideListeVarPrime node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADeclarationVar(ADeclarationVar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATableauDeclarationVar(ATableauDeclarationVar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAListeFonc(AListeFonc node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVideListeFonc(AVideListeFonc node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADeclarationFonc(ADeclarationFonc node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABoolType(ABoolType node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEntierType(AEntierType node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATypeTypeOptionnel(ATypeTypeOptionnel node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVideTypeOptionnel(AVideTypeOptionnel node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABlocInstruction(ABlocInstruction node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAListeInstruction(AListeInstruction node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVideListeInstruction(AVideListeInstruction node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAffectationInstruction(AAffectationInstruction node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASiInstruction(ASiInstruction node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASiSinonInstruction(ASiSinonInstruction node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATantQueInstruction(ATantQueInstruction node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARetourInstruction(ARetourInstruction node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAppelFonctionInstruction(AAppelFonctionInstruction node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEcrireInstruction(AEcrireInstruction node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVar(AVar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATableauVar(ATableauVar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAListeExpr(AListeExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVideListeExpr(AVideListeExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAListeExprPrime(AListeExprPrime node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVideListeExprPrime(AVideListeExprPrime node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAOuExpr(AOuExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPrioriteSuivanteExpr(APrioriteSuivanteExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEtExpr2(AEtExpr2 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPrioriteSuivanteExpr2(APrioriteSuivanteExpr2 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEgalExpr3(AEgalExpr3 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAInfExpr3(AInfExpr3 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPrioriteSuivanteExpr3(APrioriteSuivanteExpr3 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPlusExpr4(APlusExpr4 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMoinsExpr4(AMoinsExpr4 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPrioriteSuivanteExpr4(APrioriteSuivanteExpr4 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultExpr5(AMultExpr5 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADivExpr5(ADivExpr5 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPrioriteSuivanteExpr5(APrioriteSuivanteExpr5 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANonExpr6(ANonExpr6 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPrioriteSuivanteExpr6(APrioriteSuivanteExpr6 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEntreParanthesesExpr7(AEntreParanthesesExpr7 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANombreExpr7(ANombreExpr7 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVraiExpr7(AVraiExpr7 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFauxExpr7(AFauxExpr7 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAppelFonctionExpr7(AAppelFonctionExpr7 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseALireExpr7(ALireExpr7 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVariableExpr7(AVariableExpr7 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCrochetGauche(TCrochetGauche node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCrochetDroit(TCrochetDroit node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTParentheseGauche(TParentheseGauche node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTParentheseDroite(TParentheseDroite node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAccoladeGauche(TAccoladeGauche node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAccoladeDroite(TAccoladeDroite node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSi(TSi node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSinon(TSinon node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAlors(TAlors node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTantQue(TTantQue node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFaire(TFaire node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEcrire(TEcrire node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRetour(TRetour node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLire(TLire node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTOu(TOu node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEt(TEt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEgal(TEgal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTInf(TInf node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPlus(TPlus node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMoins(TMoins node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMult(TMult node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDiv(TDiv node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTExclamation(TExclamation node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBool(TBool node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEntier(TEntier node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVrai(TVrai node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFaux(TFaux node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVirgule(TVirgule node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPointVirgule(TPointVirgule node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEspace(TEspace node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCommentaire(TCommentaire node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNombre(TNombre node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIdentif(TIdentif node)
    {
        defaultCase(node);
    }

    @Override
    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    @Override
    public void caseInvalidToken(InvalidToken node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}

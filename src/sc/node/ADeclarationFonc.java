/* This file was generated by SableCC (http://www.sablecc.org/). */

package sc.node;

import sc.analysis.*;

@SuppressWarnings("nls")
public final class ADeclarationFonc extends PDeclarationFonc
{
    private PTypeOptionnel _typeOptionnel_;
    private TIdentif _identif_;
    private TParentheseGauche _parentheseGauche_;
    private PListeVar _argument_;
    private TParentheseDroite _parentheseDroite_;
    private PListeVar _varLocale_;
    private PBlocInstruction _blocInstruction_;

    public ADeclarationFonc()
    {
        // Constructor
    }

    public ADeclarationFonc(
        @SuppressWarnings("hiding") PTypeOptionnel _typeOptionnel_,
        @SuppressWarnings("hiding") TIdentif _identif_,
        @SuppressWarnings("hiding") TParentheseGauche _parentheseGauche_,
        @SuppressWarnings("hiding") PListeVar _argument_,
        @SuppressWarnings("hiding") TParentheseDroite _parentheseDroite_,
        @SuppressWarnings("hiding") PListeVar _varLocale_,
        @SuppressWarnings("hiding") PBlocInstruction _blocInstruction_)
    {
        // Constructor
        setTypeOptionnel(_typeOptionnel_);

        setIdentif(_identif_);

        setParentheseGauche(_parentheseGauche_);

        setArgument(_argument_);

        setParentheseDroite(_parentheseDroite_);

        setVarLocale(_varLocale_);

        setBlocInstruction(_blocInstruction_);

    }

    @Override
    public Object clone()
    {
        return new ADeclarationFonc(
            cloneNode(this._typeOptionnel_),
            cloneNode(this._identif_),
            cloneNode(this._parentheseGauche_),
            cloneNode(this._argument_),
            cloneNode(this._parentheseDroite_),
            cloneNode(this._varLocale_),
            cloneNode(this._blocInstruction_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseADeclarationFonc(this);
    }

    public PTypeOptionnel getTypeOptionnel()
    {
        return this._typeOptionnel_;
    }

    public void setTypeOptionnel(PTypeOptionnel node)
    {
        if(this._typeOptionnel_ != null)
        {
            this._typeOptionnel_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._typeOptionnel_ = node;
    }

    public TIdentif getIdentif()
    {
        return this._identif_;
    }

    public void setIdentif(TIdentif node)
    {
        if(this._identif_ != null)
        {
            this._identif_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._identif_ = node;
    }

    public TParentheseGauche getParentheseGauche()
    {
        return this._parentheseGauche_;
    }

    public void setParentheseGauche(TParentheseGauche node)
    {
        if(this._parentheseGauche_ != null)
        {
            this._parentheseGauche_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._parentheseGauche_ = node;
    }

    public PListeVar getArgument()
    {
        return this._argument_;
    }

    public void setArgument(PListeVar node)
    {
        if(this._argument_ != null)
        {
            this._argument_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._argument_ = node;
    }

    public TParentheseDroite getParentheseDroite()
    {
        return this._parentheseDroite_;
    }

    public void setParentheseDroite(TParentheseDroite node)
    {
        if(this._parentheseDroite_ != null)
        {
            this._parentheseDroite_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._parentheseDroite_ = node;
    }

    public PListeVar getVarLocale()
    {
        return this._varLocale_;
    }

    public void setVarLocale(PListeVar node)
    {
        if(this._varLocale_ != null)
        {
            this._varLocale_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._varLocale_ = node;
    }

    public PBlocInstruction getBlocInstruction()
    {
        return this._blocInstruction_;
    }

    public void setBlocInstruction(PBlocInstruction node)
    {
        if(this._blocInstruction_ != null)
        {
            this._blocInstruction_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._blocInstruction_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._typeOptionnel_)
            + toString(this._identif_)
            + toString(this._parentheseGauche_)
            + toString(this._argument_)
            + toString(this._parentheseDroite_)
            + toString(this._varLocale_)
            + toString(this._blocInstruction_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._typeOptionnel_ == child)
        {
            this._typeOptionnel_ = null;
            return;
        }

        if(this._identif_ == child)
        {
            this._identif_ = null;
            return;
        }

        if(this._parentheseGauche_ == child)
        {
            this._parentheseGauche_ = null;
            return;
        }

        if(this._argument_ == child)
        {
            this._argument_ = null;
            return;
        }

        if(this._parentheseDroite_ == child)
        {
            this._parentheseDroite_ = null;
            return;
        }

        if(this._varLocale_ == child)
        {
            this._varLocale_ = null;
            return;
        }

        if(this._blocInstruction_ == child)
        {
            this._blocInstruction_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._typeOptionnel_ == oldChild)
        {
            setTypeOptionnel((PTypeOptionnel) newChild);
            return;
        }

        if(this._identif_ == oldChild)
        {
            setIdentif((TIdentif) newChild);
            return;
        }

        if(this._parentheseGauche_ == oldChild)
        {
            setParentheseGauche((TParentheseGauche) newChild);
            return;
        }

        if(this._argument_ == oldChild)
        {
            setArgument((PListeVar) newChild);
            return;
        }

        if(this._parentheseDroite_ == oldChild)
        {
            setParentheseDroite((TParentheseDroite) newChild);
            return;
        }

        if(this._varLocale_ == oldChild)
        {
            setVarLocale((PListeVar) newChild);
            return;
        }

        if(this._blocInstruction_ == oldChild)
        {
            setBlocInstruction((PBlocInstruction) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}

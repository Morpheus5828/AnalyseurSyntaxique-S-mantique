/* This file was generated by SableCC (http://www.sablecc.org/). */

package sc.node;

import sc.analysis.*;

@SuppressWarnings("nls")
public final class ASiSinonInstruction extends PInstruction
{
    private TSi _si_;
    private PExpr _expr_;
    private TAlors _alors_;
    private PBlocInstruction _siInstruction_;
    private TSinon _sinon_;
    private PBlocInstruction _sinonInstruction_;

    public ASiSinonInstruction()
    {
        // Constructor
    }

    public ASiSinonInstruction(
        @SuppressWarnings("hiding") TSi _si_,
        @SuppressWarnings("hiding") PExpr _expr_,
        @SuppressWarnings("hiding") TAlors _alors_,
        @SuppressWarnings("hiding") PBlocInstruction _siInstruction_,
        @SuppressWarnings("hiding") TSinon _sinon_,
        @SuppressWarnings("hiding") PBlocInstruction _sinonInstruction_)
    {
        // Constructor
        setSi(_si_);

        setExpr(_expr_);

        setAlors(_alors_);

        setSiInstruction(_siInstruction_);

        setSinon(_sinon_);

        setSinonInstruction(_sinonInstruction_);

    }

    @Override
    public Object clone()
    {
        return new ASiSinonInstruction(
            cloneNode(this._si_),
            cloneNode(this._expr_),
            cloneNode(this._alors_),
            cloneNode(this._siInstruction_),
            cloneNode(this._sinon_),
            cloneNode(this._sinonInstruction_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASiSinonInstruction(this);
    }

    public TSi getSi()
    {
        return this._si_;
    }

    public void setSi(TSi node)
    {
        if(this._si_ != null)
        {
            this._si_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._si_ = node;
    }

    public PExpr getExpr()
    {
        return this._expr_;
    }

    public void setExpr(PExpr node)
    {
        if(this._expr_ != null)
        {
            this._expr_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._expr_ = node;
    }

    public TAlors getAlors()
    {
        return this._alors_;
    }

    public void setAlors(TAlors node)
    {
        if(this._alors_ != null)
        {
            this._alors_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._alors_ = node;
    }

    public PBlocInstruction getSiInstruction()
    {
        return this._siInstruction_;
    }

    public void setSiInstruction(PBlocInstruction node)
    {
        if(this._siInstruction_ != null)
        {
            this._siInstruction_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._siInstruction_ = node;
    }

    public TSinon getSinon()
    {
        return this._sinon_;
    }

    public void setSinon(TSinon node)
    {
        if(this._sinon_ != null)
        {
            this._sinon_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._sinon_ = node;
    }

    public PBlocInstruction getSinonInstruction()
    {
        return this._sinonInstruction_;
    }

    public void setSinonInstruction(PBlocInstruction node)
    {
        if(this._sinonInstruction_ != null)
        {
            this._sinonInstruction_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._sinonInstruction_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._si_)
            + toString(this._expr_)
            + toString(this._alors_)
            + toString(this._siInstruction_)
            + toString(this._sinon_)
            + toString(this._sinonInstruction_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._si_ == child)
        {
            this._si_ = null;
            return;
        }

        if(this._expr_ == child)
        {
            this._expr_ = null;
            return;
        }

        if(this._alors_ == child)
        {
            this._alors_ = null;
            return;
        }

        if(this._siInstruction_ == child)
        {
            this._siInstruction_ = null;
            return;
        }

        if(this._sinon_ == child)
        {
            this._sinon_ = null;
            return;
        }

        if(this._sinonInstruction_ == child)
        {
            this._sinonInstruction_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._si_ == oldChild)
        {
            setSi((TSi) newChild);
            return;
        }

        if(this._expr_ == oldChild)
        {
            setExpr((PExpr) newChild);
            return;
        }

        if(this._alors_ == oldChild)
        {
            setAlors((TAlors) newChild);
            return;
        }

        if(this._siInstruction_ == oldChild)
        {
            setSiInstruction((PBlocInstruction) newChild);
            return;
        }

        if(this._sinon_ == oldChild)
        {
            setSinon((TSinon) newChild);
            return;
        }

        if(this._sinonInstruction_ == oldChild)
        {
            setSinonInstruction((PBlocInstruction) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
